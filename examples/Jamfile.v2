# Boost.Fiber Library Examples Jamfile

#          Copyright Oliver Kowalke 2013.
# Distributed under the Boost Software License, Version 1.0.
#    (See accompanying file LICENSE_1_0.txt or copy at
#          http://www.boost.org/LICENSE_1_0.txt)

# For more information, see http://www.boost.org/

project boost/fiber/example
    : requirements
      <target-os>freebsd:<linkflags>"-lrt"
      <target-os>linux:<linkflags>"-lrt -lpthread"
      <toolset>clang/<target-os>linux:<linkflags>"-lpthread"
      <toolset>pgi:<linkflags>"-lrt"
      <library>../build//boost_fiber
      <library>/boost/atomic//boost_atomic
      <library>/boost/coroutine//boost_coroutine
      <library>/boost/system//boost_system
      <library>/boost/thread//boost_thread
      <toolset>gcc-4.7,<segmented-stacks>on:<cxxflags>-fsplit-stack
      <toolset>gcc-4.7,<segmented-stacks>on:<cxxflags>-DBOOST_USE_SEGMENTED_STACKS
      <toolset>gcc-4.8,<segmented-stacks>on:<cxxflags>-fsplit-stack
      <toolset>gcc-4.8,<segmented-stacks>on:<cxxflags>-DBOOST_USE_SEGMENTED_STACKS
      <link>static
      <threading>multi
#      <define>BOOST_ASIO_ENABLE_HANDLER_TRACKING
    ;

#exe barrier : barrier.cpp ;
#exe future : future.cpp ;
#exe futures_mt : futures_mt.cpp ;
#exe interrupt : interrupt.cpp ;
#exe join : join.cpp ;
#exe ping_pong : ping_pong.cpp ;
#exe segmented_stack : segmented_stack.cpp ;
exe simple : simple.cpp ;

#exe asio/daytime_client : asio/daytime_client.cpp ;
#exe asio/daytime_client2 : asio/daytime_client2.cpp ;
#exe asio/echo_client : asio/echo_client.cpp ;
#exe asio/echo_client2 : asio/echo_client2.cpp ;
#exe asio/echo_server : asio/echo_server.cpp ;
#exe asio/echo_server2 : asio/echo_server2.cpp ;

#exe asio/publish_subscribe/server : asio/publish_subscribe/server.cpp ;
#exe asio/publish_subscribe/publisher : asio/publish_subscribe/publisher.cpp ;
#exe asio/publish_subscribe/subscriber : asio/publish_subscribe/subscriber.cpp ;
